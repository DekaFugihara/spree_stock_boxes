<%= render :partial => 'spree/admin/shared/configuration_menu' %>
<% if Rails.env.development? %>
  <script> var webPrefix = "http://localhost:3000/admin/stock_boxes/"; </script>
<% else %>
  <script> var webPrefix = "http://retroca.com.br/admin/stock_boxes/"; </script>
<% end %>
<% content_for :page_actions do %> 
  <li><%= button_link_to "Nova Caixa", new_admin_stock_box_path %></li>
  <li><%= button_link_to "Ordenar (Mais produtos)", admin_stock_boxes_path(p_first: true) %></li>
  <li><%= button_link_to "Ordenar (Menos produtos)", admin_stock_boxes_path(p_last: true) %></li>
  <li><%= button_link_to "Apenas caixas nÃ£o-vazias", admin_stock_boxes_path %></li>
  <li><%= button_link_to "Todas as caixas, sem ordem", admin_stock_boxes_path(non_empty: true) %></li>
<% end %>

<% content_for :page_title do %>
  Caixas de Estoque
<% end %>

<table>
  <thead><tr>
    <th>Number</th>
    <th>Positionx</th>
    <th>Positiony</th>
    <th>Positionz</th>
    <th>Quantity</th>
    <!--<th>Items</th>-->
    <th data-hook="admin_orders_index_header_actions" class="actions"></th>
  </tr></thead>
<tbody>
<% @stock_boxes.each do |stock_box| %>
  <tr>
    <td><%= link_to stock_box.number, admin_stock_box_path(stock_box) %></td>
    <td><%= stock_box.positionX %></td>
    <td><%= stock_box.positionY %></td>
    <td><%= stock_box.positionZ %></td>
    <td><%= stock_box.variants.count %></td>
    <!--<td><%#= stock_box.total_items %></td>-->
    <td class='actions align-center' data-hook="admin_orders_index_row_actions">
			<%= link_to_edit_url edit_admin_stock_box_path(stock_box), :no_text => true %>
			<%= link_to_delete stock_box, :no_text => true, :url => admin_stock_box_path(stock_box) %>
      <button class="print-contents" id="<%= stock_box.id %>">Imprimir</button>
		</td>
  </tr>
<% end %>
<tbody>
</table>
<div id="print"></div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.0/jquery.min.js"></script>
<script>(function (window, undefined) {
    var document = window.document;
    var $ = window.jQuery;
    $.fn.printElement = function (options) {
        var mainOptions = $.extend({}, $.fn.printElement.defaults, options);
        //iframe mode is not supported for opera and chrome 3.0 (it prints the entire page).
        //http://www.google.com/support/forum/p/Webmasters/thread?tid=2cb0f08dce8821c3&hl=en
        if (mainOptions.printMode === 'iframe') {
            if (/chrome/.test(navigator.userAgent.toLowerCase())) {
                mainOptions.printMode = 'popup';
            }
        }
        //Remove previously printed iframe if exists
        $("[id^='printElement_']").remove();

        return this.each(function () {
            //Support Metadata Plug-in if available
            var opts = $.meta ? $.extend({}, mainOptions, $(this).data()) : mainOptions;
            _printElement($(this), opts);
        });
    };
    $.fn.printElement.defaults = {
        "printMode": 'iframe', //Usage : iframe / popup
        "pageTitle": '', //Print Page Title
        "overrideElementCSS": null,
        /* Can be one of the following 3 options:
        * 1 : boolean (pass true for stripping all css linked)
        * 2 : array of $.fn.printElement.cssElement (s)
        * 3 : array of strings with paths to alternate css files (optimized for print)
        */
        "printBodyOptions": {
            "styleToAdd": 'padding:10px;margin:10px;', //style attributes to add to the body of print document
            "classNameToAdd": '' //css class to add to the body of print document
        },
        "leaveOpen": false, // in case of popup, leave the print page open or not
        "iframeElementOptions": {
            "styleToAdd": 'border:none;position:absolute;width:0px;height:0px;bottom:0px;left:0px;', //style attributes to add to the iframe element
            "classNameToAdd": '' //css class to add to the iframe element
        }
    };
    $.fn.printElement.cssElement = {
        "href": '',
        "media": ''
    };
    function _printElement(element, opts) {
        //Create markup to be printed
        var html = _getMarkup(element, opts);

        var popupOrIframe = null;
        var documentToWriteTo = null;
        if (opts.printMode.toLowerCase() === 'popup') {
            popupOrIframe = window.open('about:blank', 'printElementWindow', 'width=650,height=440,scrollbars=yes');
            documentToWriteTo = popupOrIframe.document;
        } else {
            //The random ID is to overcome a safari bug http://www.cjboco.com.sharedcopy.com/post.cfm/442dc92cd1c0ca10a5c35210b8166882.html
            var printElementID = "printElement_" + (Math.round(Math.random() * 99999)).toString();
            //Native creation of the element is faster..
            var iframe = document.createElement('IFRAME');
            $(iframe).attr({
                style: opts.iframeElementOptions.styleToAdd,
                id: printElementID,
                className: opts.iframeElementOptions.classNameToAdd,
                frameBorder: 0,
                scrolling: 'no',
                src: 'about:blank'
            });
            document.body.appendChild(iframe);
            documentToWriteTo = (iframe.contentWindow || iframe.contentDocument);
            if (documentToWriteTo.document) {
                documentToWriteTo = documentToWriteTo.document;
            }
            iframe = document.frames ? document.frames[printElementID] : document.getElementById(printElementID);
            popupOrIframe = iframe.contentWindow || iframe;
        }
        focus();
        documentToWriteTo.open();
        documentToWriteTo.write(html);
        documentToWriteTo.close();
        _callPrint(popupOrIframe);
    }

    function _callPrint(element) {
        if (element && element.printPage) {
            element.printPage();
        } else {
            setTimeout(function () {
                _callPrint(element);
            }, 50);
        }
    }

    function _getElementHTMLIncludingFormElements(element) {
        var $element = $(element);
        //Radiobuttons and checkboxes
        $(":checked", $element).each(function () {
            this.setAttribute('checked', 'checked');
        });
        //simple text inputs
        $("input[type='text'],input[type='number']", $element).each(function () {
            this.setAttribute('value', $(this).val());
        });
        $("select", $element).each(function () {
            var $select = $(this);
            $("option", $select).each(function () {
                if ($select.val() === $(this).val()) {
                    this.setAttribute('selected', 'selected');
                }
            });
        });
        $("textarea", $element).each(function () {
            //Thanks http://blog.ekini.net/2009/02/24/jquery-getting-the-latest-textvalue-inside-a-textarea/
            var value = $(this).attr('value');
            //fix for issue 7 (http://plugins.jquery.com/node/13503 and http://github.com/erikzaadi/jQueryPlugins/issues#issue/7)
            if (this.firstChild) {
                this.firstChild.textContent = value;
            } else {
                this.innerHTML = value;
            }
        });
        //http://dbj.org/dbj/?p=91
        var elementHtml = $('<div></div>').append($element.clone()).html();
        return elementHtml;
    }

    function _getBaseHref() {
        var port = (window.location.port) ? ':' + window.location.port : '';
        return window.location.protocol + '//' + window.location.hostname + port + window.location.pathname;
    }

    function _getMarkup(element, opts) {
        var $element = $(element);
        var elementHtml = _getElementHTMLIncludingFormElements(element);

        var html = [];
        html.push('<html><head><title>' + opts.pageTitle + '</title>');
        if (opts.overrideElementCSS) {
            if (opts.overrideElementCSS.length > 0) {
                for (var x = 0; x < opts.overrideElementCSS.length; x += 1) {
                    var current = opts.overrideElementCSS[x];
                    if (typeof (current) === 'string') {
                        html.push('<link type="text/css" rel="stylesheet" href="' + current + '" >');
                    } else {
                        var media = current.media || '';
                        html.push('<link type="text/css" rel="stylesheet" href="' + current.href + '" media="' + media + '" >');
                    }
                }
            }
        } else {
            $("link", document).filter(function () {
                return $(this).attr("rel").toLowerCase() === "stylesheet";
            }).each(function () {
                var media = $(this).attr('media') || '';
                html.push('<link type="text/css" rel="stylesheet" href="' + $(this).attr("href") + '" media="' + media + '" >');
            });
        }
        //Ensure that relative links work
        html.push('<base href="' + _getBaseHref() + '" />');
        html.push('</head><body style="' + opts.printBodyOptions.styleToAdd + '" class="' + opts.printBodyOptions.classNameToAdd + '">');
        html.push('<div class="' + $element.attr('class') + '">' + elementHtml + '</div>');
        html.push('<script type="text/javascript">function printPage(){focus();print();' + ((!opts.leaveOpen && opts.printMode.toLowerCase() === 'popup') ? 'close();' : '') + '}</script>');
        html.push('</body></html>');

        return html.join('');
    }
}(window));</script>
<script>
  $(document).ready(function() {
    $.getScript("https://raw.githubusercontent.com/erikzaadi/jQuery.printElement/master/src/jquery.printelement.js");

    $(".print-contents").on("click", function(e) {
      e.preventDefault();
      var buttonID = this.id;
      var index = 0;
      var tableRows = "";
      var tableHeaders = "";
      $.getJSON(webPrefix + buttonID + ".json", function(json) {
        tableHeaders += "<h3>Tabela # " + json.stock_box.stock_box.number + "</h3><table><th>SKU</th><th>NOME</th><th>QTE NA CAIXA</th>";
        json.variants.forEach(function(variant) {
          if (variant.variant.count_on_hand > 0) {
            tableRows += "<tr>";
            tableRows += "<td>" + variant.variant.sku + "</td><td>" + json.variant_names[index] + "</td><td>" + variant.variant.count_on_hand + "</td>";
            tableRows += "</tr>";
          }
          index += 1;
        });
        tableRows += "</table>";
        $("#print").show();
        $("#print").html(tableHeaders + tableRows);
        $("#print").printElement();
        $("#print").hide();
      });
    });
  });

</script>